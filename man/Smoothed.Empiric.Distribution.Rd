% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoothed_empiric_distribution.R
\name{Smoothed.Empiric.Distribution}
\alias{Smoothed.Empiric.Distribution}
\title{Create an smoothed empiric distribution from a set of samples}
\usage{
Smoothed.Empiric.Distribution(
  points,
  weights = 1,
  var.names = NULL,
  bandwidth.multipliers = 1
)
}
\arguments{
\item{points}{A matrix of values, where each row represents one sample and each column represents one variable. If a numeric vector is passed, assumed to be samples from a univariate distribution}

\item{weights}{A numeric vector of weights, one for each row in points}

\item{var.names}{The names of the variables in the distribution. If NULL, uses the column names from points}
}
\description{
Create an smoothed empiric distribution from a set of samples
}
\seealso{
Other Distribution Constructors: 
\code{\link{Autoregressive.Multivariate.Normal.Distribution}()},
\code{\link{Bernoulli.Distribution}()},
\code{\link{Beta.Distribution}()},
\code{\link{Binomial.Distribution}()},
\code{\link{Canonical.Mixture.Distribution}()},
\code{\link{Compound.Symmetry.Multivariate.Normal.Distribution}()},
\code{\link{Empiric.Distribution}()},
\code{\link{Logitnormal.Distribution}()},
\code{\link{Logitnormal.Mixture}()},
\code{\link{Logituniform.Distribution}()},
\code{\link{Lognormal.Distribution}()},
\code{\link{Lognormal.Mixture}()},
\code{\link{Loguniform.Distribution}()},
\code{\link{Multivariate.Correlated.Uniform.Distribution}()},
\code{\link{Multivariate.Logitnormal.Distribution}()},
\code{\link{Multivariate.Lognormal.Distribution}()},
\code{\link{Multivariate.Normal.Distribution}()},
\code{\link{Normal.Distribution}()},
\code{\link{Normal.Mixture}()},
\code{\link{Transformed.Multivariate.Normal.Distribution}()},
\code{\link{Transformed.Normal.Distribution}()},
\code{\link{Transformed.Normal.Mixture}()},
\code{\link{Uniform.Distribution}()},
\code{\link{Univariate.Canonical.Distribution}()},
\code{\link{join.distributions}()}
}
\concept{Distribution Constructors}
